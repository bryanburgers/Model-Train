<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     xmlns:track="tag:bryan.burgers@gmail.com,2010:train-track">
 <track:trackdata><![CDATA[{"name":"Simple","pieces":[{"x":0,"y":-120,"rotation":0,"pieceID":"straight-240"},{"x":240,"y":-240,"rotation":0,"pieceID":"curve-45-240"},{"x":240.0145034790039,"y":-240.0232391357422,"rotation":44.993630263560085,"pieceID":"curve-45-240"},{"x":240.04119323566556,"y":-240.0294189453125,"rotation":89.98726052712017,"pieceID":"curve-45-240"},{"x":240.0644073486328,"y":-240.01495361328125,"rotation":134.98089079068026,"pieceID":"curve-45-240"},{"x":480.12392638623714,"y":-120.09500122070312,"rotation":179.97452105424034,"pieceID":"straight-240"},{"x":240.17733764648438,"y":0.01172640174627304,"rotation":179.97452105424034,"pieceID":"curve-45-240"},{"x":240.16287231445312,"y":0.034942626953125,"rotation":-135.03184868219958,"pieceID":"curve-45-240"},{"x":240.13618737459183,"y":0.0411376953125,"rotation":-90.0382184186395,"pieceID":"curve-45-240"},{"x":240.1129150390625,"y":0.026641845703125,"rotation":-45.04458815507942,"pieceID":"curve-45-240"}]}]]></track:trackdata>
 <track:trackdata><![CDATA[{"name":"Large","pieces":[{"x":0,"y":-120,"rotation":0,"pieceID":"straight-240"},{"x":240,"y":-240,"rotation":0,"pieceID":"curve-45-240"},{"x":240.0145034790039,"y":-240.0232391357422,"rotation":44.993630263560085,"pieceID":"curve-45-240"},{"x":240.04119323566556,"y":-240.0294189453125,"rotation":89.98726052712017,"pieceID":"curve-45-240"},{"x":240.0644073486328,"y":-240.01495361328125,"rotation":134.98089079068026,"pieceID":"curve-45-240"},{"x":720.0767364501953,"y":-240.17501068860292,"rotation":314.9808907906803,"pieceID":"curve-45-240"},{"x":720.0999755859375,"y":-240.16051483154297,"rotation":269.9872605271202,"pieceID":"curve-45-240"},{"x":720.2066290266812,"y":239.8394716233015,"rotation":89.98726052712021,"pieceID":"curve-45-240"},{"x":720.2298126220703,"y":239.85398864746094,"rotation":134.9808907906803,"pieceID":"curve-45-240"},{"x":960.2893316596746,"y":359.7739715576172,"rotation":179.97452105424037,"pieceID":"straight-240"},{"x":720.3426818847656,"y":479.88072630763054,"rotation":179.97452105424037,"pieceID":"curve-45-240"},{"x":720.328125,"y":479.9039764404297,"rotation":-135.03184868219955,"pieceID":"curve-45-240"},{"x":600.4615707397461,"y":719.9901948869228,"rotation":-90.03821841863947,"pieceID":"straight-240"},{"x":360.4616012573242,"y":720.1502290666103,"rotation":-90.03821841863947,"pieceID":"straight-240"},{"x":240.3015621304512,"y":480.2302703857422,"rotation":-90.03821841863947,"pieceID":"curve-45-240"},{"x":240.2782745361328,"y":480.2158203125,"rotation":-45.04458815507939,"pieceID":"curve-45-240"},{"x":0.1654442995786667,"y":360.4026641845703,"rotation":-0.05095789151930319,"pieceID":"straight-240"},{"x":-0.048007577657699585,"y":120.40275573730469,"rotation":-0.05095789151930319,"pieceID":"straight-240"}]}]]></track:trackdata>
 <track:trackdata><![CDATA[{"name":"Oval","pieces":[{"x":0,"y":0,"rotation":0,"pieceID":"split-right-straight-curve-45-240"},{"x":240,"y":-240,"rotation":0,"pieceID":"curve-45-240"},{"x":240.0145034790039,"y":-240.0232391357422,"rotation":44.993630263560085,"pieceID":"curve-45-240"},{"x":240.04119323566556,"y":-240.0294189453125,"rotation":89.98726052712017,"pieceID":"curve-45-240"},{"x":240.0644073486328,"y":-240.01495361328125,"rotation":134.98089079068026,"pieceID":"curve-45-240"},{"x":480.17728259414434,"y":-0.0950164794921875,"rotation":-0.0254789457596587,"pieceID":"split-left-straight-curve-45-240"},{"x":480.23064635694027,"y":119.90496826171875,"rotation":179.97452105424034,"pieceID":"straight-240"},{"x":240.2840576171875,"y":240.01169249415398,"rotation":179.97452105424034,"pieceID":"curve-45-240"},{"x":240.26959228515625,"y":240.03489685058594,"rotation":-135.03184868219958,"pieceID":"curve-45-240"},{"x":240.24290734529495,"y":240.0410919189453,"rotation":-90.0382184186395,"pieceID":"curve-45-240"},{"x":240.21964263916016,"y":240.026611328125,"rotation":-45.04458815507942,"pieceID":"curve-45-240"},{"x":0.106804758310318,"y":120.21343994140625,"rotation":-0.05095789151933161,"pieceID":"straight-240"},{"x":240.03221893310547,"y":-0.0609893798828125,"rotation":44.98088654151417,"pieceID":"curve-45-240"},{"x":240.05890318751335,"y":-0.06719970703125,"rotation":89.97451680507424,"pieceID":"curve-45-240"}]}]]></track:trackdata>
 <track:trackdata><![CDATA[{"name":"Mess","pieces":[{"x":0,"y":-120,"rotation":0,"pieceID":"straight-240"},{"x":240,"y":-240,"rotation":0,"pieceID":"curve-45-240"},{"x":240.0145034790039,"y":-240.0232391357422,"rotation":44.993630263560085,"pieceID":"curve-45-240"},{"x":240.04119323566556,"y":-240.0294189453125,"rotation":89.98726052712017,"pieceID":"curve-45-240"},{"x":240.0644073486328,"y":-240.01495361328125,"rotation":134.98089079068026,"pieceID":"curve-45-240"},{"x":720.0767364501953,"y":-240.17501068860292,"rotation":314.9808907906803,"pieceID":"curve-45-240"},{"x":720.0999755859375,"y":-240.16051483154297,"rotation":269.9872605271202,"pieceID":"curve-45-240"},{"x":720.2066290266812,"y":239.8394716233015,"rotation":89.98726052712021,"pieceID":"curve-45-240"},{"x":720.2298126220703,"y":239.85398864746094,"rotation":134.9808907906803,"pieceID":"curve-45-240"},{"x":960.2359619140625,"y":239.77398681640625,"rotation":179.97452105424037,"pieceID":"split-right-straight-curve-45-240"},{"x":960.3960821479559,"y":599.7739410400391,"rotation":179.97452105424037,"pieceID":"straight-240"},{"x":720.4494323730469,"y":719.8806652724743,"rotation":179.97452105424037,"pieceID":"curve-45-240"},{"x":720.4349975585938,"y":719.9039154052734,"rotation":-135.03184868219955,"pieceID":"curve-45-240"},{"x":720.5684204101562,"y":959.9100952148438,"rotation":-90.03821841863947,"pieceID":"split-right-straight-curve-45-240"},{"x":360.5685043334961,"y":960.1502290666103,"rotation":-90.03821841863947,"pieceID":"straight-240"},{"x":240.40846520662308,"y":720.2302703857422,"rotation":-90.03821841863947,"pieceID":"curve-45-240"},{"x":240.3851776123047,"y":720.2158203125,"rotation":-45.04458815507939,"pieceID":"curve-45-240"},{"x":0.2723257690668106,"y":600.4026336669922,"rotation":-0.05095789151930319,"pieceID":"straight-240"},{"x":-0.047879159450531006,"y":240.40280151367188,"rotation":-180.05095789151932,"pieceID":"split-left-straight-curve-45-240"},{"x":-0.15460510551929474,"y":120.40284729003906,"rotation":-0.0509578915193174,"pieceID":"straight-240"},{"x":720.2038116455078,"y":239.94171142578125,"rotation":224.95540759575454,"pieceID":"curve-45-240"},{"x":720.3905639648438,"y":479.9477844238281,"rotation":-90.05096214068539,"pieceID":"split-left-straight-curve-45-240"},{"x":360.3907012939453,"y":480.2679943665862,"rotation":-90.05096214068539,"pieceID":"straight-240"},{"x":240.17725284397602,"y":240.37484741210938,"rotation":-90.05096214068539,"pieceID":"curve-45-240"},{"x":720.5286254882812,"y":720.0032196044922,"rotation":359.97452105424037,"pieceID":"curve-45-240"},{"x":720.5348358154297,"y":720.0299606248736,"rotation":314.98089079068023,"pieceID":"curve-45-240"}]}]]></track:trackdata>

 <script type="text/javascript" xlink:href="angle.js" />
 <script type="text/javascript" xlink:href="bezier-curve.js" />
 <script type="text/javascript" xlink:href="animation.js" />
 <script type="text/javascript" xlink:href="utility.js" />
 <script type="text/javascript" xlink:href="endpoint.js" />
 <script type="text/javascript" xlink:href="part.js" />
 <script type="text/javascript" xlink:href="track.js" />
 <script type="text/javascript" xlink:href="train.js" />
 <script type="text/javascript" xlink:href="traverser.js" />
 <script type="text/javascript" xlink:href="session.js" />
 <script type="text/javascript"><![CDATA[
  function drawEndpoint(endpoint) {
    var tracks = document.getElementById("tracks");
    var g = document.createElementNS("http://www.w3.org/2000/svg", "g");
    g.setAttribute("transform", "translate(" + endpoint.position.x.toString() + " " + endpoint.position.y.toString() + ") rotate(" + endpoint.degrees + ")");
    var e1 = document.createElementNS("http://www.w3.org/2000/svg", "ellipse");
    e1.setAttribute("cx", "0");
    e1.setAttribute("cy", "0");
    e1.setAttribute("rx", "50");
    e1.setAttribute("ry", "50");
    e1.setAttribute("stroke", "red");
    e1.setAttribute("stroke-width", "5");
    e1.setAttribute("fill", "rgba(255,0,0,0.5)");

    var p1 = document.createElementNS("http://www.w3.org/2000/svg", "path");
    p1.setAttribute("d", "M 0 40 L 0 -40 M -20 -20 L 0 -40 L 20 -20");
    p1.setAttribute("stroke", "red");
    p1.setAttribute("stroke-width", "5");
    p1.setAttribute("fill", "none");

    g.appendChild(e1);
    g.appendChild(p1);

    tracks.appendChild(g);
  }

  var partsCollection = new PartsCollection();
  var ps = new Part("straight-240", [Bezier.parsePath("M 0 120 C 0 40 0 -40 0 -120")]);
  var pc90 = new Part("curve-90-240", [Bezier.parsePath("M -240 0 C -240 -132.528 -132.528 -240 0 -240")]);
  var pc45 = new Part("curve-45-240", [Bezier.parsePath("M -240 0 C -240 -63.6 -214.68 -124.73 -169.71 -169.71")]);

  var psplitrsc45 = new Part("split-right-straight-curve-45-240", [Bezier.parsePath("M 0 0 C 0 -80 0 -160 0 -240"), Bezier.parsePath("M 0 0 C 0 -63.6 25.32 -124.73 70.27 -169.71")]);
  var psplitlsc45 = new Part("split-left-straight-curve-45-240", [Bezier.parsePath("M 0 0 C 0 -80 0 -160 0 -240"), Bezier.parsePath("M 0 0 C 0 -63.6 -25.32 -124.73 -70.27 -169.71")]);

  partsCollection.registerPart(ps);
  partsCollection.registerPart(pc90);
  partsCollection.registerPart(pc45);
  partsCollection.registerPart(psplitrsc45);
  partsCollection.registerPart(psplitlsc45);

  animationEngine = Animation.createAnimationEngine();
  animationEngine.addEventListener("animateframe", animateFrame, false);
  animationEngine.addEventListener("fpschange", function(event) {
    var fpsD = document.getElementById("fps");
    fpsD.textContent = event.fps.toString();
  }, false);

  var speed = 100; // millimeters/second
  var traverser = null;
  var trainSvg = null;
  var i = 128;
  var boxSettings = {
    rotate: 0,
    translateX: 300,
    translateY: 300,
    scale: 0.44444,
    toTransformString: function() {
      return "translate(" + this.translateX + "," + this.translateY + ") scale(" + this.scale + ") rotate(" + this.rotate + ")";
    },
    update: function() {
      document.getElementById("box").setAttribute("transform", this.toTransformString());
    }
  };

  function animateFrame(event) {
    if (!traverser) { return; }
    i += event.secondsEllapsed * speed;
    var oldLength = traverser.length;
    if (i > traverser.length) {
      var result = traverser.getPoint(traverser.length);
      var rotation = traverser.getDegrees(traverser.length);
      z = Train.findClosestTrackPiece(pieces, result, rotation, traverser.trackPiece);
      if (z) {
        traverser = z.endpoint.getRandomTraverser();
      }
      else {
        traverser = null;
      }

      while (i > oldLength) { i -= oldLength; }
    }

    if (traverser) {
      var result = traverser.getPoint(i);
      var rotation = traverser.getDegrees(i);
      Train.updateTrain(trainSVG, {position:result,rotation:rotation});
    }
  }
  
  var control = {
    isMouseDown: false,
    element: null,
    addEventListeners: function(element) {
      var t = this;
      element.addEventListener("mousedown", function(event) { t.mousedown(this, event); }, false);
      window.addEventListener("mouseup", function(event) { t.mouseup(event); }, false);
      window.addEventListener("mousemove", function(event) { t.mousemove(event); }, false);
    },
    mousedown: function(element, event) {
      this.isMouseDown = true;
      this.element = element;
      this.update(element, event);
    },
    mouseup: function(event) {
      if (this.isMouseDown) {
        this.isMouseDown = false;
        this.update(this.element, event);
      }
    },
    mousemove: function(event) {
      if (this.isMouseDown) {
        this.update(this.element, event);
        event.stopPropagation();
      }
    },
    createControl: function(subject) {
      for (var p in this) {
        if (p == 'createControl') { continue; }
        if (p == 'isMouseDown') { continue; }
        if (p == 'element') { continue; }
        subject[p] = this[p];
      }
      return subject;
    }
  };

  var speedControl = control.createControl({
    update: function(element, event) {
      var p = document.documentElement.createSVGPoint();
      p.x = event.layerX;
      p.y = event.layerY;

      var p2 = p.matrixTransform(element.getCTM().inverse());

      var y = 100 - p2.y;
      if (y < 7.5) { y = 0; }

      y = Math.min(100, Math.max(0, y));
      
      var speedSVG = document.getElementById("speed");
      speedSVG.setAttribute("y", (100 - y).toString());
      speedSVG.setAttribute("height", y.toString());
      speed = y / 0.25;
    }
  });

  var rotationControl = control.createControl({
    update: function(element, event) {
      var p = document.documentElement.createSVGPoint();
      p.x = event.layerX;
      p.y = event.layerY;

      var p2 = p.matrixTransform(element.getCTM().inverse());

      var angleR = Math.atan2(p2.y - 50, p2.x);

      var newX = 40 * Math.cos(angleR);
      var newY = 40 * Math.sin(angleR) + 50;

      var angleD = (angleR * 180 / Math.PI) + 90;
      boxSettings.rotate = angleD;

      var rotationSVG = document.getElementById("rotation");
      rotationSVG.setAttribute("cx", newX.toString());
      rotationSVG.setAttribute("cy", newY.toString());

      boxSettings.update();
    }
  });


  var zoomControl = control.createControl({
    update: function(element, event) {
      var p = document.documentElement.createSVGPoint();
      p.x = event.layerX;
      p.y = event.layerY;

      var p2 = p.matrixTransform(element.getCTM().inverse());

      var y = 100 - p2.y;
      y = Math.min(100, Math.max(0, y));
      
      var zoomSVG = document.getElementById("zoom");
      zoomSVG.setAttribute("y", (100 - y).toString());
      zoomSVG.setAttribute("height", y.toString());
      boxSettings.scale = y / 100;

      boxSettings.update();
    }
  });

  var panControl = control.createControl({
    update: function(element, event) {
      if (event.type == "mousedown") {
        this.originalTranslateX = boxSettings.translateX;
        this.originalTranslateY = boxSettings.translateY;
        this.originalMouseX = event.layerX;
        this.originalMouseY = event.layerY;
      }
      boxSettings.translateX = this.originalTranslateX + (event.layerX - this.originalMouseX);
      boxSettings.translateY = this.originalTranslateY + (event.layerY - this.originalMouseY);
      boxSettings.update();
    }
  });

  var layouts = {};
  function loadLayouts() {
    var yoffset = 0;
    var yheight = 21;
    var ymargin = 2;
    var elements = document.getElementsByTagNameNS("tag:bryan.burgers@gmail.com,2010:train-track", "trackdata");
    var layoutsSVG = document.getElementById("layouts");
    for (var i = 0; i < elements.length; i++) {
      var element = elements[i];
      var jsonStr = element.childNodes[0].nodeValue;
      var json = JSON.parse(jsonStr);
      layouts[json.name] = json;
      var rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
      rect.setAttribute("x", "0");
      rect.setAttribute("y", yoffset.toString());
      rect.setAttribute("width", "75");
      rect.setAttribute("height", yheight.toString());
      rect.setAttribute("fill", "blue");
      rect.setAttribute("stroke", "black");
      addClickEventListener(rect, json.name);
      layoutsSVG.appendChild(rect);
      yoffset += yheight + ymargin;
    }    
  }

  function addClickEventListener(rect, name) {
    rect.addEventListener("click", function() { changeLayout(name); }, false);
  }

  function changeLayout(name) {
    var layout = layouts[name];
    if (!layout) { return; }

    var parent = document.getElementById("tracks");
    while (parent.childNodes.length) {
      parent.removeChild(parent.childNodes[0]);
    }
    var trainsParent = document.getElementById("trains");
    while (trainsParent.childNodes.length) {
      trainsParent.removeChild(trainsParent.childNodes[0]);
    }

    pieces = loadTrack(layout, partsCollection);

    for (var i = 0; i < pieces.length; i++) {
      pieces[i].drawSVG(parent);
    }

    var train = Train.createTrain("#train");   
    {
      var trackPiece = pieces[0];
      var endpoint = trackPiece.getEndpoints()[0];
      traverser = endpoint.getFirstTraverser();
    }
   
    var initialPosition = traverser.getPoint(i);
    var initialDegrees = traverser.getDegrees(i);
    trainSVG = Train.createTrainSVG(document, document.getElementById("trains"), train, {position:initialPosition,rotation:initialDegrees});
  }

  addEventListener("load", function(event) {
   speedControl.addEventListeners(document.getElementById("speedControl"));
   rotationControl.addEventListeners(document.getElementById("rotationControl"));
   zoomControl.addEventListeners(document.getElementById("zoomControl"));
   panControl.addEventListeners(document);
   document.addEventListener("click", function(event) { console.log(JSON.stringify(Session.trackPiecesToJson(pieces))); }, false);
   loadLayouts();

   var s = {x:ps};
   var rs = {x:ps,e:1};

   var splitr0 = {x:psplitrsc45};
   var splitr1 = {x:psplitrsc45,e:1};
   var splitl0 = {x:psplitlsc45};
   var splitl1 = {x:psplitlsc45,e:1};
   
   var c45 = {x:pc45};
   var rc45 = {x:pc45,e:1};

   var c90 = {x:pc90};
   var rc90 = {x:pc90,e:1};

   pieces = createTrack({x:0,y:0}, 0,
     [ s
     , c45
     , c45
     , c45
     , c45
     , s
     , c45
     , c45
     , c45
     , c45
     ]);

   var parent = document.getElementById("tracks");

   for (var i = 0; i < pieces.length; i++) {
    pieces[i].drawSVG(parent);
   }

   var train = Train.createTrain("#train");   
   {
     var trackPiece = pieces[0];
     var endpoint = trackPiece.getEndpoints()[0];
     traverser = endpoint.getFirstTraverser();
   }
   
   var initialPosition = traverser.getPoint(i);
   var initialDegrees = traverser.getDegrees(i);
   trainSVG = Train.createTrainSVG(document, document.getElementById("trains"), train, {position:initialPosition,rotation:initialDegrees});
   animationEngine.startAnimation();
  }, false);
 ]]></script>
 <defs>
  <g id="straight-240">
   <line x1="0" y1="120" x2="0" y2="-120" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" />
   <line x1="-4.5" y1="120" x2="-4.5" y2="-120" stroke-width="1" stroke="black" />
   <line  x1="4.5" y1="120"  x2="4.5" y2="-120" stroke-width="1" stroke="black" />
  </g>
  <g id="curve-45-240">
   <path d="M -240 0 C -240 -63.6 -214.68 -124.73 -169.71 -169.71" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" fill="none" />
   <path d="M -244.5,0 A 244.5,244.5,0,0,1,-172.89,-172.89" stroke-width="1" stroke="black" fill="none" />
   <path d="M -235.5,0 A 235.5,235.5,0,0,1,-166.52,-166.52" stroke-width="1" stroke="black" fill="none" />
  </g>

  <g id="curve-90-240" track:is-piece-definition="true">
   <path track:is-control-path="true" d="M -240 0 C -240 -132.528 -132.528 -240 0 -240" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" fill="none" />
   <path d="M -244.5,0 A 244.5,244.5,0,0,1,0,-244.5" stroke-width="1" stroke="black" fill="none" />
   <path d="M -235.5,0 A 235.5,235.5,0,0,1,0,-235.5" stroke-width="1" stroke="black" fill="none" />
  </g>

  <g id="split-right-straight-curve-45-240">
   <line x1="0" y1="0" x2="0" y2="-240" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" />
   <line x1="-4.5" y1="0" x2="-4.5" y2="-240" stroke-width="1" stroke="black" />
   <line  x1="4.5" y1="0"  x2="4.5" y2="-240" stroke-width="1" stroke="black" />

   <path d="M 0 0 C 0 -63.6 25.32 -124.73 70.27 -169.71" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" fill="none" />
   <path d="M -4.5,0 A 244.5,244.5,0,0,1,67.11,-172.89" stroke-width="1" stroke="black" fill="none" />
   <path d="M 4.5,0 A 235.5,235.5,0,0,1,73.48,-166.52" stroke-width="1" stroke="black" fill="none" />
  </g>

  <g id="split-left-straight-curve-45-240">
   <line x1="0" y1="0" x2="0" y2="-240" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" />
   <line x1="-4.5" y1="0" x2="-4.5" y2="-240" stroke-width="1" stroke="black" />
   <line  x1="4.5" y1="0"  x2="4.5" y2="-240" stroke-width="1" stroke="black" />

   <path d="M 0 0 C 0 -63.6 -25.32 -124.73 -70.27 -169.71" stroke-width="18" stroke="#b51" stroke-dasharray="2,8" stroke-dashoffset="4" fill="none" />
   <path d="M 4.5,0 A 244.5,244.5,0,0,0,-67.11,-172.89" stroke-width="1" stroke="black" fill="none" />
   <path d="M -4.5,0 A 235.5,235.5,0,0,0,-73.48,-166.52" stroke-width="1" stroke="black" fill="none" />
  </g>

  <linearGradient
 id="windshieldGradient" x1="-8" y1="-16" x2="8" y2="-11" gradientUnits="userSpaceOnUse">

   <stop
 stop-color="#004f86" offset="0" />

   <stop stop-color="#000000" offset="1" />

  </linearGradient>

  <linearGradient
 id="trainGradient" x1="-10"
 x2="10"
 gradientUnits="userSpaceOnUse">

   <stop stop-color="#f60000" offset="0" />

   <stop stop-color="#d20000" offset="0.5" />

   <stop stop-color="#f60000" offset="1" />

  </linearGradient>

  <g id="train">
   <path

     d="M -10,15 C -10,18 -8,20 -5,20 L 5,20 C 8,20 10,18 10,15 L 10,-10 C 10,-30 -10,-30 -10,-10 L -10,15 z"

     fill="url(#trainGradient)"
     stroke="none"/>
   <path

     d="M -8,-11 C -7,-10 7,-10 8,-11 C 8,-27 -8,-27 -8,-11 z"
     fill="url(#windshieldGradient)"
     stroke="none"/>
  </g>
 </defs>

 <!-- The grass (background) -->
 <rect width="100%" height="100%" fill="#080"/>

 <!-- Where all of the scene elements go -->
 <g id="box" transform="translate(300,300) scale(0.444444) rotate(0)">
   <g id="tracks"/>
   <g id="trains"/>
 </g>

 <g id="layouts" transform="translate(105, 5)">
 </g>

 <!-- Speed -->
 <g id="speedControl" transform="translate(5,5)">
   <rect x="0" y="0" width="20" height="100" fill="#fff"/>
   <rect id="speed" x="0" y="75" width="20" height="25" fill="#88f"/>
   <rect x="0" y="0" width="20" height="100" stroke="#008" fill="none"/>
 </g>

 <!-- Rotation -->
 <g id="rotationControl" transform="translate(55,105)">
   <path d="M 0,0 A 50,50,0,1,0,0.001,0 M 0,20 A 30,30,0,1,0,0.001,20" fill="white" stroke="#008" fill-rule="evenodd"/>
   <ellipse id="rotation" rx="10" ry="10" cx="0" cy="10" fill="#88f" stroke="#008"/>
   <path d="M 0,0 A 50,50,0,1,0,0.001,0 M 0,20 A 30,30,0,1,0,0.001,20" fill="none" stroke="#008" fill-rule="evenodd"/>
 </g>

 <!-- Zoom -->
 <g id="zoomControl" transform="translate(5,205)">
   <rect x="0" y="0" width="20" height="100" fill="#fff"/>
   <rect id="zoom" x="0" y="56" width="20" height="44" fill="#88f"/>
   <rect x="0" y="0" width="20" height="100" stroke="#008" fill="none"/>
 </g>

 <g transform="translate(205, 5)">
   <text id="fps" x="0" y="10"></text>
 </g>
</svg>